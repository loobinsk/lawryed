# Generated by Django 2.2.3 on 2019-11-07 00:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import lawyerd.users.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255, verbose_name='Full name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('owner_name', models.CharField(help_text='The name of the company owner', max_length=200)),
                ('owner_surname', models.CharField(help_text='Name and surname of the representative', max_length=200)),
                ('title', models.CharField(help_text='Position of the represenatative/position/title', max_length=200)),
                ('address', models.CharField(help_text='Address of registration of the company owner', max_length=200)),
                ('region', models.CharField(help_text='Region of registration of copyright, â„–, name TM', max_length=200)),
                ('owner_date', models.CharField(help_text='Date of commencement of business activities', max_length=200)),
                ('products', models.CharField(help_text='Products that have been developed by', max_length=200)),
                ('document', models.FileField(blank=True, help_text='Confirmation of the possibility interests', null=True, upload_to=lawyerd.users.models.company_get_file_path)),
                ('email', models.EmailField(help_text='Email represenatative', max_length=254)),
                ('additional', models.CharField(help_text='Additional information about the company (EDRPOU code, HQ address, corporate phone number, corporate email address)', max_length=200)),
                ('additional2', models.CharField(help_text='Additional information about the object to be protected', max_length=200)),
                ('confirmation', models.CharField(help_text='Conformation of the acceptance of the user agreement', max_length=200)),
                ('website', models.CharField(help_text='Company Website', max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='Represenatative telephone number', max_length=128, region=None)),
                ('youtube', models.URLField(blank=True, help_text='Link to the official Youtube channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
